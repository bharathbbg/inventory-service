name: Build and Deploy to GCP

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{ env.GCP_PROJECT_ID }}
  GKE_CLUSTER: ${{ env.GKE_CLUSTER }}
  GKE_ZONE: ${{ env.GKE_ZONE }}
  IMAGE_NAME: ${{ env.IMAGE_NAME }}

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.25'

    - name: Run tests
      run: make test

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ env.GCP_PROJECT_ID }}
        service_account_key: ${{ env.GCP_SA_KEY }}
        export_default_credentials: true

    - name: Configure Docker for GCR
      run: gcloud auth configure-docker

    - name: Build and push Docker image
      run: |
        SERVICE_NAME=$(basename ${{ github.repository }})
        IMAGE_NAME="${{ env.IMAGE_NAME }}"
        docker build -t ${IMAGE_NAME} .
        docker push ${IMAGE_NAME}

    - name: Get GKE credentials
      uses: google-github-actions/get-gke-credentials@v1
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}

    - name: Deploy to GKE
      run: |
        SERVICE_NAME=$(basename ${{ github.repository }})
        
        # Update the deployment with the new image
        kubectl set image deployment/${SERVICE_NAME} ${SERVICE_NAME}=${IMAGE_NAME} -n ecommerce-staging
        
        # Wait for the deployment to complete
        kubectl rollout status deployment/${SERVICE_NAME} -n ecommerce-staging